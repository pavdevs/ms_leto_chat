basePath: /
definitions:
  chatsdto.ChatDTO:
    properties:
      created_at:
        type: integer
      id:
        type: integer
      owner_id:
        type: integer
      title:
        type: string
    type: object
  chatsdto.CreateChatRequest:
    properties:
      title:
        type: string
    type: object
  chatsdto.DeleteChatResponse:
    properties:
      message:
        type: string
    type: object
  chatsdto.EditChatRequest:
    properties:
      title:
        type: string
    type: object
  chatsdto.GetChatsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/chatsdto.ChatDTO'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for leto app for chats api
  title: Leto chats service
  version: "1.0"
paths:
  /chats:
    get:
      consumes:
      - application/json
      description: Данный роут пощволяет получить список чатов пользоватедя который
        из запрашивает
      operationId: get_chats_list
      produces:
      - application/json
      responses:
        "200":
          description: Список чатов успешно получен
          schema:
            $ref: '#/definitions/chatsdto.GetChatsResponse'
      security:
      - ApiKeyAuth: []
      summary: Get chats list
      tags:
      - Chats
    post:
      consumes:
      - application/json
      description: Данный роут создает чат и возвращает модель созданного чата
      operationId: create_chat
      parameters:
      - description: Параметры создания чата
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/chatsdto.CreateChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Чат успешно создан
          schema:
            $ref: '#/definitions/chatsdto.ChatDTO'
      security:
      - ApiKeyAuth: []
      summary: Create chat
      tags:
      - Chats
  /chats/{chatID}:
    delete:
      consumes:
      - application/json
      description: Данный роут позволяет удалить чат по его ID
      operationId: delete_chat_by_id
      parameters:
      - description: ID чата
        in: path
        name: chatID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Чат успешно удален
          schema:
            $ref: '#/definitions/chatsdto.DeleteChatResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete chat by id
      tags:
      - Chats
    patch:
      consumes:
      - application/json
      description: Данный роут позволяет удалить чат по его ID
      operationId: edit_chat_by_id
      parameters:
      - description: ID чата
        in: path
        name: chatID
        required: true
        type: integer
      - description: Параметры редактирования чата
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/chatsdto.EditChatRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Чат успешно изменен
          schema:
            $ref: '#/definitions/chatsdto.ChatDTO'
      security:
      - ApiKeyAuth: []
      summary: Edit chat by id
      tags:
      - Chats
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
