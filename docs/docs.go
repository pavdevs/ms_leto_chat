// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Данный роут пощволяет получить список чатов пользоватедя который из запрашивает",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Get chats list",
                "operationId": "get_chats_list",
                "responses": {
                    "200": {
                        "description": "Список чатов успешно получен",
                        "schema": {
                            "$ref": "#/definitions/chatsdto.GetChatsResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Данный роут создает чат и возвращает модель созданного чата",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Create chat",
                "operationId": "create_chat",
                "parameters": [
                    {
                        "description": "Параметры создания чата",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chatsdto.CreateChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Чат успешно создан",
                        "schema": {
                            "$ref": "#/definitions/chatsdto.CreateChatResponse"
                        }
                    }
                }
            }
        },
        "/chats/{chatID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Данный роут позволяет удалить чат по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chats"
                ],
                "summary": "Delete chat by id",
                "operationId": "delete_chat_by_id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID чата",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Чат успешно удален",
                        "schema": {
                            "$ref": "#/definitions/chatsdto.DeleteChatResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "chatsdto.Chat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "owner_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "chatsdto.CreateChatRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "chatsdto.CreateChatResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "owner_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "chatsdto.DeleteChatResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "chatsdto.GetChatsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chatsdto.Chat"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Leto chats service",
	Description:      "API Server for leto app for chats api",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
